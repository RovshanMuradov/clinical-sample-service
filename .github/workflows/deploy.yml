name: Deploy Clinical Sample API with SAM

on:
  push:
    branches: [ main, develop ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install AWS SAM CLI
        run: |
          pip install --upgrade aws-sam-cli

      - name: Build SAM application
        run: sam build --debug

      - name: Deploy SAM application
        env:
          DB_ENDPOINT: ${{ secrets.DB_ENDPOINT }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          LAMBDA_SG_ID: ${{ secrets.LAMBDA_SG_ID }}
        run: |
          sam deploy \
            --stack-name clinical-sample-api \
            --s3-bucket ${{ secrets.SAM_S3_BUCKET }} \
            --region ${{ secrets.AWS_DEFAULT_REGION }} \
            --parameter-overrides \
              DBEndpoint=${DB_ENDPOINT} \
              DBUser=${DB_USER} \
              DBPassword=${DB_PASSWORD} \
              DBName=${DB_NAME} \
              JWTSecret=${JWT_SECRET} \
              LambdaSecurityGroupId=${LAMBDA_SG_ID} \
            --capabilities CAPABILITY_IAM \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset

      - name: Get API URL and run smoke test
        run: |
          API_URL=$(aws cloudformation describe-stacks \
            --stack-name clinical-sample-api \
            --query "Stacks[0].Outputs[?OutputKey=='ApiUrl'].OutputValue" \
            --output text)
          echo "API URL: $API_URL"
          sleep 15
          curl -f "${API_URL}health" || (echo "Health check failed" && exit 1)
          echo "✅ API успешно развернут и отвечает!"